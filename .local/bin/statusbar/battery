#!/bin/sh
# If provided with any input it will show battry percentage, otherwise it will be shown by a corresponding icon.
# Prints all batteries, their percentage remaining or an emoji corresponding

case $BLOCK_BUTTON in
    3) notify-send "$(ico bat) Battery module" "$(ico bat-discharging): discharging
$(ico bat): not charging
$(ico bat-unknown): unknown (stagnant charging)
$(ico bat-charging): charging
$(ico bat-f): charged
- Scroll to change backlight." ;;
    4) bl up ;;
    5) bl down ;;
    6) editor "$0" ;;
esac

# acpi alternative
# acpi | sed "s/Battery [0-9]: //;s/[Dd]ischarging, /$(ico bat-discharging)/;s/[Nn]ot charging, /$(ico bat)/;s/[Cc]harging, /$(ico bat-charging)/;s/[Uu]nknown, /$(ico bat-unknown)/;s/[Ff]ull, /$(ico bat-f)/;s/ \(remaining\|until charged\)//"; exit

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT? ;do
    # Get its remaining capacity and charge status.
    capacity=$(cat "$battery"/capacity 2>/dev/null) || break
    status=$(sed "s/[Dd]ischarging/$(ico bat-discharging)/;s/[Nn]ot charging/$(ico bat)/;s/[Cc]harging/$(ico bat-charging)/;s/[Uu]nknown/$(ico bat-unknown)/;s/[Ff]ull/$(ico bat-f)/" "$battery"/status)
    if [ "$status" = "$(ico bat-f)" ] ;then
        out="$status"
    elif [ "$status" = "$(ico bat-discharging)" ] && [ -z "$1" ] ;then
        if [ "$capacity" -gt 90 ] ;then
            out="$(ico bat)"
        elif [ "$capacity" -gt 10 ] ;then
            out="$(ico bat-$(echo "$capacity" | head -c1))"
        else
            out="ó°‚Ž"
        fi
    else
        out="$status$capacity%"
    fi
    printf "%s " "$out"
done | sed 's/\s*$//'
printf '\n'
