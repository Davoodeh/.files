#!/bin/sh
# An edited https://github.com/porras/i3-keyboard-layout/blob/master/i3-keyboard-layout by MYDavoodeh
helpmsg='Usage: kblayout [COMMAND] [INPUTS]
If provided with false commands this message will be prompted.

Requirements are `setxkbmap`, `awk` and `grep` (optionally `dmenu` for marked commands).

Viable commands:
  get    prints the current language and variant
  set    sets keyboard layout to the language provided
  cycle  cycles through a list of languages provided to it
* list   puts a list of available "basic" layouts in `dmenu` for you to choose from
         if you just want to list installed layouts use `localctl list-x11-keymap-layouts`

Use "xx" as input where xx is the language code (us, ir, ru, dk...).
Alternatively, use "xx-variant" if you do not want the "basic" variant of a layout.
List available variants with `localectl list-x11-keymap-variants xx`.

Set Env var $STATUSBAR (default value "dwmblocks") to your statusbar of choice
to have it singalled with "30" each time you run the script.

Examples:
  kblayout get
  kblayout set us
  kblayout cycle us ir ru-phonetic'
# FIXME The script is relatively way too slow (especially when cycling)

getl(){ # prints out keyboard layout in xx-variant format.
  q="$(setxkbmap -query)"
  variant="$(echo "$q" | grep -oP 'variant:\s*\K\w+')" && variant="-$variant"
  echo "$(echo "$q" | grep -oP 'layout:\s*\K[\w,]+')$variant"
}

setl(){ # accepts either the layout (xx) or layout and variant separated with a dash (xx-variant)
    [ -z "$1" ] && echo "$helpmsg" && exit 1
    setxkbmap "$(echo "$1" | cut -d- -f1)" "$(echo "$1" | cut -s -d- -f2)"
    [ "$STATUSBAR" = "i3status" ] && pgrep i3status | xargs --no-run-if-empty kill -s USR1 || # tell i3status to update
        pkill -RTMIN+30 "${STATUSBAR:-dwmblocks}" # for [lang] or [kbselect] modules in blocks bars
}


case $1 in
    g*) getl ;;
    s*) setl "$2" ;;
    c*) shift && setl "$(echo "$@" | grep -oP ".*$(getl) +\\K[\\w-]+" || echo "$1")" ;;
    l*) command -v dmenu >/dev/null &&
          setxkbmap "$(echo "$(awk '/! layout/{flag=1; next} /! variant/{flag=0} flag {print $2, "- " $1}' /usr/share/X11/xkb/rules/base.lst | dmenu -l 15)" | awk '{print $3}')" ||
          echo "$helpmsg" ;;
    *) echo "$helpmsg" ;;
esac
